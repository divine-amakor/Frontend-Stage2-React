{"ast":null,"code":"const SESSION_KEY = 'ticketapp_session';\nconst USERS_KEY = 'ticketapp_users';\nconst getUsers = () => {\n  const users = localStorage.getItem(USERS_KEY);\n  return users ? JSON.parse(users) : [{\n    id: '1',\n    email: 'admin@ticketflow.com',\n    password: 'admin123',\n    name: 'Admin User'\n  }];\n};\nconst saveUsers = users => {\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\n};\nexport const auth = {\n  login: (email, password) => {\n    const users = getUsers();\n    const user = users.find(u => u.email === email && u.password === password);\n    if (user) {\n      const session = {\n        userId: user.id,\n        email: user.email,\n        name: user.name\n      };\n      localStorage.setItem(SESSION_KEY, JSON.stringify(session));\n      return {\n        success: true,\n        user: session\n      };\n    }\n    return {\n      success: false,\n      error: 'Invalid credentials'\n    };\n  },\n  signup: (email, password, name) => {\n    if (!email || !password || !name) {\n      return {\n        success: false,\n        error: 'All fields are required'\n      };\n    }\n    const users = getUsers();\n    if (users.find(u => u.email === email)) {\n      return {\n        success: false,\n        error: 'Email already exists'\n      };\n    }\n    const newUser = {\n      id: Date.now().toString(),\n      email,\n      password,\n      name\n    };\n    users.push(newUser);\n    saveUsers(users);\n    const session = {\n      userId: newUser.id,\n      email: newUser.email,\n      name: newUser.name\n    };\n    localStorage.setItem(SESSION_KEY, JSON.stringify(session));\n    return {\n      success: true,\n      user: session\n    };\n  },\n  logout: () => {\n    localStorage.removeItem(SESSION_KEY);\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem(SESSION_KEY);\n  },\n  getCurrentUser: () => {\n    const session = localStorage.getItem(SESSION_KEY);\n    return session ? JSON.parse(session) : null;\n  }\n};","map":{"version":3,"names":["SESSION_KEY","USERS_KEY","getUsers","users","localStorage","getItem","JSON","parse","id","email","password","name","saveUsers","setItem","stringify","auth","login","user","find","u","session","userId","success","error","signup","newUser","Date","now","toString","push","logout","removeItem","isAuthenticated","getCurrentUser"],"sources":["C:/Users/Divine/Desktop/HNG/Frontend Stage2 React/src/utils/auth.js"],"sourcesContent":["const SESSION_KEY = 'ticketapp_session';\nconst USERS_KEY = 'ticketapp_users';\n\nconst getUsers = () => {\n  const users = localStorage.getItem(USERS_KEY);\n  return users ? JSON.parse(users) : [\n    { id: '1', email: 'admin@ticketflow.com', password: 'admin123', name: 'Admin User' }\n  ];\n};\n\nconst saveUsers = (users) => {\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\n};\n\nexport const auth = {\n  login: (email, password) => {\n    const users = getUsers();\n    const user = users.find(u => u.email === email && u.password === password);\n    \n    if (user) {\n      const session = { userId: user.id, email: user.email, name: user.name };\n      localStorage.setItem(SESSION_KEY, JSON.stringify(session));\n      return { success: true, user: session };\n    }\n    return { success: false, error: 'Invalid credentials' };\n  },\n\n  signup: (email, password, name) => {\n    if (!email || !password || !name) {\n      return { success: false, error: 'All fields are required' };\n    }\n    \n    const users = getUsers();\n    if (users.find(u => u.email === email)) {\n      return { success: false, error: 'Email already exists' };\n    }\n    \n    const newUser = {\n      id: Date.now().toString(),\n      email,\n      password,\n      name\n    };\n    \n    users.push(newUser);\n    saveUsers(users);\n    \n    const session = { userId: newUser.id, email: newUser.email, name: newUser.name };\n    localStorage.setItem(SESSION_KEY, JSON.stringify(session));\n    return { success: true, user: session };\n  },\n\n  logout: () => {\n    localStorage.removeItem(SESSION_KEY);\n  },\n\n  isAuthenticated: () => {\n    return !!localStorage.getItem(SESSION_KEY);\n  },\n\n  getCurrentUser: () => {\n    const session = localStorage.getItem(SESSION_KEY);\n    return session ? JSON.parse(session) : null;\n  }\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG,mBAAmB;AACvC,MAAMC,SAAS,GAAG,iBAAiB;AAEnC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACJ,SAAS,CAAC;EAC7C,OAAOE,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CACjC;IAAEK,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,sBAAsB;IAAEC,QAAQ,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAa,CAAC,CACrF;AACH,CAAC;AAED,MAAMC,SAAS,GAAIT,KAAK,IAAK;EAC3BC,YAAY,CAACS,OAAO,CAACZ,SAAS,EAAEK,IAAI,CAACQ,SAAS,CAACX,KAAK,CAAC,CAAC;AACxD,CAAC;AAED,OAAO,MAAMY,IAAI,GAAG;EAClBC,KAAK,EAAEA,CAACP,KAAK,EAAEC,QAAQ,KAAK;IAC1B,MAAMP,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAMe,IAAI,GAAGd,KAAK,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,KAAK,KAAKA,KAAK,IAAIU,CAAC,CAACT,QAAQ,KAAKA,QAAQ,CAAC;IAE1E,IAAIO,IAAI,EAAE;MACR,MAAMG,OAAO,GAAG;QAAEC,MAAM,EAAEJ,IAAI,CAACT,EAAE;QAAEC,KAAK,EAAEQ,IAAI,CAACR,KAAK;QAAEE,IAAI,EAAEM,IAAI,CAACN;MAAK,CAAC;MACvEP,YAAY,CAACS,OAAO,CAACb,WAAW,EAAEM,IAAI,CAACQ,SAAS,CAACM,OAAO,CAAC,CAAC;MAC1D,OAAO;QAAEE,OAAO,EAAE,IAAI;QAAEL,IAAI,EAAEG;MAAQ,CAAC;IACzC;IACA,OAAO;MAAEE,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAsB,CAAC;EACzD,CAAC;EAEDC,MAAM,EAAEA,CAACf,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IACjC,IAAI,CAACF,KAAK,IAAI,CAACC,QAAQ,IAAI,CAACC,IAAI,EAAE;MAChC,OAAO;QAAEW,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAA0B,CAAC;IAC7D;IAEA,MAAMpB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAIC,KAAK,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,KAAK,KAAKA,KAAK,CAAC,EAAE;MACtC,OAAO;QAAEa,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAuB,CAAC;IAC1D;IAEA,MAAME,OAAO,GAAG;MACdjB,EAAE,EAAEkB,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBnB,KAAK;MACLC,QAAQ;MACRC;IACF,CAAC;IAEDR,KAAK,CAAC0B,IAAI,CAACJ,OAAO,CAAC;IACnBb,SAAS,CAACT,KAAK,CAAC;IAEhB,MAAMiB,OAAO,GAAG;MAAEC,MAAM,EAAEI,OAAO,CAACjB,EAAE;MAAEC,KAAK,EAAEgB,OAAO,CAAChB,KAAK;MAAEE,IAAI,EAAEc,OAAO,CAACd;IAAK,CAAC;IAChFP,YAAY,CAACS,OAAO,CAACb,WAAW,EAAEM,IAAI,CAACQ,SAAS,CAACM,OAAO,CAAC,CAAC;IAC1D,OAAO;MAAEE,OAAO,EAAE,IAAI;MAAEL,IAAI,EAAEG;IAAQ,CAAC;EACzC,CAAC;EAEDU,MAAM,EAAEA,CAAA,KAAM;IACZ1B,YAAY,CAAC2B,UAAU,CAAC/B,WAAW,CAAC;EACtC,CAAC;EAEDgC,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAO,CAAC,CAAC5B,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC;EAC5C,CAAC;EAEDiC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMb,OAAO,GAAGhB,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC;IACjD,OAAOoB,OAAO,GAAGd,IAAI,CAACC,KAAK,CAACa,OAAO,CAAC,GAAG,IAAI;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}