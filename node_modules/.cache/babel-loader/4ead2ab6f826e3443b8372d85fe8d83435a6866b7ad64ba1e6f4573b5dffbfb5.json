{"ast":null,"code":"const SESSION_KEY = 'ticketapp_session';\nexport const auth = {\n  login: (email, password) => {\n    // Simulate authentication\n    if (email === 'admin@ticketflow.com' && password === 'admin123') {\n      const token = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem(SESSION_KEY, token);\n      return {\n        success: true,\n        token\n      };\n    }\n    return {\n      success: false,\n      error: 'Invalid credentials'\n    };\n  },\n  signup: (email, password, name) => {\n    // Simulate signup\n    if (email && password && name) {\n      const token = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem(SESSION_KEY, token);\n      return {\n        success: true,\n        token\n      };\n    }\n    return {\n      success: false,\n      error: 'All fields are required'\n    };\n  },\n  logout: () => {\n    localStorage.removeItem(SESSION_KEY);\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem(SESSION_KEY);\n  },\n  getToken: () => {\n    return localStorage.getItem(SESSION_KEY);\n  }\n};","map":{"version":3,"names":["SESSION_KEY","auth","login","email","password","token","Date","now","localStorage","setItem","success","error","signup","name","logout","removeItem","isAuthenticated","getItem","getToken"],"sources":["C:/Users/Divine/Desktop/HNG/Frontend Stage2 React/src/utils/auth.js"],"sourcesContent":["const SESSION_KEY = 'ticketapp_session';\n\nexport const auth = {\n  login: (email, password) => {\n    // Simulate authentication\n    if (email === 'admin@ticketflow.com' && password === 'admin123') {\n      const token = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem(SESSION_KEY, token);\n      return { success: true, token };\n    }\n    return { success: false, error: 'Invalid credentials' };\n  },\n\n  signup: (email, password, name) => {\n    // Simulate signup\n    if (email && password && name) {\n      const token = 'mock-jwt-token-' + Date.now();\n      localStorage.setItem(SESSION_KEY, token);\n      return { success: true, token };\n    }\n    return { success: false, error: 'All fields are required' };\n  },\n\n  logout: () => {\n    localStorage.removeItem(SESSION_KEY);\n  },\n\n  isAuthenticated: () => {\n    return !!localStorage.getItem(SESSION_KEY);\n  },\n\n  getToken: () => {\n    return localStorage.getItem(SESSION_KEY);\n  }\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG,mBAAmB;AAEvC,OAAO,MAAMC,IAAI,GAAG;EAClBC,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC1B;IACA,IAAID,KAAK,KAAK,sBAAsB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC/D,MAAMC,KAAK,GAAG,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAC5CC,YAAY,CAACC,OAAO,CAACT,WAAW,EAAEK,KAAK,CAAC;MACxC,OAAO;QAAEK,OAAO,EAAE,IAAI;QAAEL;MAAM,CAAC;IACjC;IACA,OAAO;MAAEK,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAsB,CAAC;EACzD,CAAC;EAEDC,MAAM,EAAEA,CAACT,KAAK,EAAEC,QAAQ,EAAES,IAAI,KAAK;IACjC;IACA,IAAIV,KAAK,IAAIC,QAAQ,IAAIS,IAAI,EAAE;MAC7B,MAAMR,KAAK,GAAG,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MAC5CC,YAAY,CAACC,OAAO,CAACT,WAAW,EAAEK,KAAK,CAAC;MACxC,OAAO;QAAEK,OAAO,EAAE,IAAI;QAAEL;MAAM,CAAC;IACjC;IACA,OAAO;MAAEK,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAA0B,CAAC;EAC7D,CAAC;EAEDG,MAAM,EAAEA,CAAA,KAAM;IACZN,YAAY,CAACO,UAAU,CAACf,WAAW,CAAC;EACtC,CAAC;EAEDgB,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAO,CAAC,CAACR,YAAY,CAACS,OAAO,CAACjB,WAAW,CAAC;EAC5C,CAAC;EAEDkB,QAAQ,EAAEA,CAAA,KAAM;IACd,OAAOV,YAAY,CAACS,OAAO,CAACjB,WAAW,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}