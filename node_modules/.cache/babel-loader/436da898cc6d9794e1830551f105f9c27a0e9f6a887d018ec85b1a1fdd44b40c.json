{"ast":null,"code":"const TICKETS_KEY = 'ticketapp_tickets';\nconst getTickets = () => {\n  const tickets = localStorage.getItem(TICKETS_KEY);\n  return tickets ? JSON.parse(tickets) : [];\n};\nconst saveTickets = tickets => {\n  localStorage.setItem(TICKETS_KEY, JSON.stringify(tickets));\n};\nexport const ticketService = {\n  getAll: () => {\n    return getTickets();\n  },\n  getById: id => {\n    const tickets = getTickets();\n    return tickets.find(ticket => ticket.id === id);\n  },\n  create: ticketData => {\n    const tickets = getTickets();\n    const newTicket = {\n      id: Date.now().toString(),\n      ...ticketData,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    tickets.push(newTicket);\n    saveTickets(tickets);\n    return newTicket;\n  },\n  update: (id, ticketData) => {\n    const tickets = getTickets();\n    const index = tickets.findIndex(ticket => ticket.id === id);\n    if (index !== -1) {\n      tickets[index] = {\n        ...tickets[index],\n        ...ticketData,\n        updatedAt: new Date().toISOString()\n      };\n      saveTickets(tickets);\n      return tickets[index];\n    }\n    return null;\n  },\n  delete: id => {\n    const tickets = getTickets();\n    const filteredTickets = tickets.filter(ticket => ticket.id !== id);\n    saveTickets(filteredTickets);\n    return true;\n  },\n  getStats: () => {\n    const tickets = getTickets();\n    return {\n      total: tickets.length,\n      open: tickets.filter(t => t.status === 'open').length,\n      inProgress: tickets.filter(t => t.status === 'in_progress').length,\n      closed: tickets.filter(t => t.status === 'closed').length\n    };\n  }\n};","map":{"version":3,"names":["TICKETS_KEY","getTickets","tickets","localStorage","getItem","JSON","parse","saveTickets","setItem","stringify","ticketService","getAll","getById","id","find","ticket","create","ticketData","newTicket","Date","now","toString","createdAt","toISOString","updatedAt","push","update","index","findIndex","delete","filteredTickets","filter","getStats","total","length","open","t","status","inProgress","closed"],"sources":["C:/Users/Divine/Desktop/HNG/Frontend Stage2 React/src/utils/tickets.js"],"sourcesContent":["const TICKETS_KEY = 'ticketapp_tickets';\n\nconst getTickets = () => {\n  const tickets = localStorage.getItem(TICKETS_KEY);\n  return tickets ? JSON.parse(tickets) : [];\n};\n\nconst saveTickets = (tickets) => {\n  localStorage.setItem(TICKETS_KEY, JSON.stringify(tickets));\n};\n\nexport const ticketService = {\n  getAll: () => {\n    return getTickets();\n  },\n\n  getById: (id) => {\n    const tickets = getTickets();\n    return tickets.find(ticket => ticket.id === id);\n  },\n\n  create: (ticketData) => {\n    const tickets = getTickets();\n    const newTicket = {\n      id: Date.now().toString(),\n      ...ticketData,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    tickets.push(newTicket);\n    saveTickets(tickets);\n    return newTicket;\n  },\n\n  update: (id, ticketData) => {\n    const tickets = getTickets();\n    const index = tickets.findIndex(ticket => ticket.id === id);\n    if (index !== -1) {\n      tickets[index] = {\n        ...tickets[index],\n        ...ticketData,\n        updatedAt: new Date().toISOString()\n      };\n      saveTickets(tickets);\n      return tickets[index];\n    }\n    return null;\n  },\n\n  delete: (id) => {\n    const tickets = getTickets();\n    const filteredTickets = tickets.filter(ticket => ticket.id !== id);\n    saveTickets(filteredTickets);\n    return true;\n  },\n\n  getStats: () => {\n    const tickets = getTickets();\n    return {\n      total: tickets.length,\n      open: tickets.filter(t => t.status === 'open').length,\n      inProgress: tickets.filter(t => t.status === 'in_progress').length,\n      closed: tickets.filter(t => t.status === 'closed').length\n    };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}